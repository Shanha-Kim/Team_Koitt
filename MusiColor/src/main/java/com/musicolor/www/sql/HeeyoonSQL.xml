<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper
			PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
			"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
			
 
<mapper namespace="hSQL">
  

<!-- 프로필 사진 올리기 SQL -->
<update id="addpic" parameterType="fVO">

UPDATE
	profilepicture
set
 p_no = #{pno}, p_oriname =#{oriname} , p_savename=#{savename}, p_dir=#{dir} p_length=#{length}, p_date=#{date} 

WHERE
p_no = #{no}

</update>

 <!-- 프로필 텍스트 수정 SQL -->

<update id="profileconfig" parameterType="mVO">
<selectKey resultType="int" keyProperty ="m_no" order ="BEFORE">
	  SELECT
   		m_no	
   	FROM
   		member
   	WHERE
   		upper(m_id) = upper(#{m_id})
</selectKey>
UPDATE
member

SET

m_id=#{m_id}, m_about=#{m_about}, m_email= #{m_email}, m_tel=#{m_tel}
WHERE
m_no =#{m_no}


</update>

<!-- 개인프로필 음악앨범  리스트  SQL-->
<select id ="addalbumpic"  resultType="bVO" parameterType="String" >
	SELECT
            b_no, (SELECT a_sname FROM albumpicture WHERE b_ano = a_no) sname, b_emotion
         FROM
            board
         WHERE
         	b_isshow='Y' AND
            b_mno = (SELECT m_no  FROM member WHERE upper(m_id) =upper(#{SID}))
            AND 
            
<![CDATA[
            rownum <= 9
]]>

</select> 


<select id ="plusaddalbumpic"  resultType="bVO" parameterType="bVO" >
		SELECT * FROM
		
			(SELECT
	            b_no, (SELECT a_sname FROM albumpicture WHERE b_ano = a_no) sname, b_emotion, ROWNUM rno,
	            #{m_id} m_id
	         FROM
	            board
	         WHERE
	            b_mno = (SELECT m_no  FROM member WHERE upper(m_id) =upper(#{m_id}))
	            AND b_isshow='Y')
            
		WHERE
		rno BETWEEN #{rno} AND #{rno}+8

</select> 
 <select id="mNo" resultType="int" parameterType="String">
 	SELECT
 		m_no
 	FROM
 		member
 	WHERE
 		upper(m_id) = upper(#{SID})
 </select>


<!-- 프로필 파일 로고 가져오기 -->
<select id="proflogo" resultType="fVO" parameterType="String">
SELECT
	p_sname sname, p_oname oname, p_dir dir
FROM

profilepicture

WHERE

p_no = (SELECT
			m_pno
		FROM
			member
		WHERE
			upper(m_id)= upper(#{SID})
		)

</select>

<!-- 자기소개글 보내기  -->
<select id ="introtext" resultType="mVO" parameterType="String">

SELECT
m_about m_about

FROM
member

WHERE
	upper(m_id) = upper(#{SID})
</select>

<!-- 프로필 수정페이지에서 원래있던 정보 가져오기  -->
<select id ="configinfo" resultType="mVO" parameterType="String">

SELECT
	m_name m_name , m_about m_about, m_email m_email, m_tel m_tel

FROM
	member
WHERE
	upper(m_id) =upper(#{SID})

</select>

<!-- 게시물 카운트 전담처리함수 -->

<select id ="textcount" resultType="int" parameterType="String">
SELECT

count (*)

FROM 
board

WHERE
 b_mno = (SELECT
  			m_no
  			FROM
  			member
			WHERE
			upper(m_id) = upper(#{SID})	
 	)
 AND b_isshow='Y'
 
  
</select>

<!-- 계정 비활성화 함수 -->

<update id ="lock" parameterType="mVO">
<selectKey resultType="int" keyProperty="m_no" order="BEFORE">
SELECT
	m_no
FROM
	member
WHERE
	upper(m_id)= upper(#{m_id})
<!-- 	member 테이블에 m_no 를 m_id 로 찾는다 -->
</selectKey>
	UPDATE
		member
	<set>
	m_isshow = 'N'
	WHERE
	m_no = #{m_no}
	</set>
</update>

<!-- 비공개 계정 비활성화 -->
<update id="unlock" parameterType="mVO">  
<selectKey resultType="int" keyProperty="m_no" order="BEFORE">
SELECT
	m_no
FROM
	member
WHERE
	upper(m_id) =upper(#{m_id})
</selectKey>
UPDATE 
member 
<set>
m_isshow ='Y'
WHERE
m_no =#{m_no}
</set>
</update>

<!-- 계정 비활성화 여부 확인 -->

<select id="isshow" resultType="String" parameterType="String"> 

SELECT
m_isshow
FROM
member
WHERE
upper(m_id) = upper(#{SID})

</select>

<!-- 팔로워한 사람들  뽑아오기 sql -->
<select id ="follwer" resultType="mVO" parameterType="String">
SELECT 
    (SELECT m_id FROM member WHERE m_no = a.f_follower) m_id,
    (SELECT p_sname FROM profilepicture where p_no = (SELECT m_pno FROM member WHERE m_no=a.f_follower) ) m_name,
    DECODE((SELECT b.f_isshow FROM follow b WHERE b.f_following = a.f_follower AND b.f_follower = a.f_following ), 'Y' , 0 , 'N', 1, 2 )  m_isban
FROM
   (SELECT
      *
    FROM
      follow
    WHERE
      f_following = (select
                       m_no
                     from
                       member
                     where
                      upper(m_id) =upper(#{SID})) 
      AND f_isshow='Y'
   ) a
   
  </select> 
<!--  상대방 팔로워에서 내기준 팔로워버튼 -->
  <select id ="follwer2" resultType="mVO" parameterType="mVO">
	SELECT 
	    (SELECT m_id FROM member WHERE m_no = a.f_follower) m_id,
	    (SELECT p_sname FROM profilepicture where p_no = (SELECT m_pno FROM member WHERE m_no=a.f_follower) ) m_name,
	    DECODE((SELECT b.f_isshow FROM follow b WHERE b.f_following = a.f_follower AND b.f_follower = (SELECT m_no FROM member WHERE m_id = #{m_id}) ), 'Y' , 0 , 'N', 1, 2 )  m_isban
	FROM
	   (SELECT
	      *
	    FROM
	      follow
	    WHERE
	      f_following = (select
	                       m_no
	                     from
	                       member
	                     where
	                      upper(m_id) =upper(#{m_name})) 
	      AND f_isshow='Y'
	   ) a
  </select> 
  
  <!-- 팔로워 가 있는지 없는지 체크 함수 -->
<select id="followcheck" resultType="int" parameterType="mVO">

SELECT
	count(*)
FROM
 follow
WHERE
	f_follower = (SELECT M_NO FROM MEMBER WHERE upper(M_ID) = upper(#{m_id}))
	AND
	f_following = (SELECT M_NO FROM MEMBER WHERE upper(M_ID) = upper(#{m_name}))
	
</select>  
  
  
<!-- 팔로잉 한 사람들 목록 뽑아오기 sql -->
<select id ="following" resultType="mVO" parameterType="String">
SELECT 
    (SELECT m_id FROM member WHERE m_no = a.f_following) m_id,
    (SELECT p_sname FROM profilepicture where p_no = (SELECT m_pno FROM member WHERE m_no=a.f_following) ) m_name,
    DECODE(f_isshow, 'Y' , 0 , 'N', 1, 2 ) m_isban
FROM
   (SELECT
      *
    FROM
      follow
    WHERE
      f_follower = (select
                       m_no
                     from
                       member
                     where
                      upper(m_id) =upper(#{SID})) 
      AND f_isshow='Y'
   ) a
</select>
<!--  상대방 팔로우에서 내기준 팔로우버튼 -->
<select id ="following2" resultType="mVO" parameterType="mVO">
SELECT 
    (SELECT m_id FROM member WHERE m_no = a.f_following) m_id,
    (SELECT p_sname FROM profilepicture where p_no = (SELECT m_pno FROM member WHERE m_no = a.f_following) ) m_name,
    DECODE((SELECT b.f_isshow FROM follow b WHERE b.f_following = a.f_following AND b.f_follower = (SELECT m_no FROM member WHERE m_id = #{m_id}) ), 'Y' , 0 , 'N', 1, 2 )  m_isban
FROM
   (SELECT
      *
    FROM
      follow
    WHERE
      f_follower = (select
                       m_no
                     from
                       member
                     where
                      upper(m_id) =upper(#{m_name})) 
      AND f_isshow='Y'
   ) a	
</select>

<!-- 팔로워 처음 걸때 전담 sql -->

<insert id  ="finsert" parameterType="mVO">
INSERT INTO
FOLLOW
VALUES( 
(SELECT NVL(max(f_no)+1, 10000001) FROM follow ),
(SELECT M_NO FROM MEMBER WHERE upper(M_ID) = upper(#{m_name})),
(SELECT M_NO FROM MEMBER WHERE upper(M_ID) = upper(#{m_id})),
'Y'
)

</insert>
<!-- 팔로워가 n y 인지 체크 -->
<select id = "nycheck" resultType="mVO" parameterType="mVO">

SELECT
f_isshow m_isshow
FROM
follow
WHERE
f_follower = (SELECT M_NO FROM MEMBER WHERE upper(M_ID) = upper(#{m_id}))
AND
f_following = (SELECT M_NO FROM MEMBER WHERE upper(M_ID) = upper(#{m_name}))


</select>




<!-- 팔로우 취소 처리 전담 sql -->

<update id="fcansle"  parameterType="mVO">
UPDATE
	follow
SET
	f_isshow = 'N'
WHERE
f_follower = (SELECT M_NO FROM MEMBER WHERE upper(M_ID) = upper(#{m_id})) 
AND
f_following = (SELECT M_NO FROM MEMBER WHERE upper(M_ID) = upper(#{m_name}))
 
</update>

<!-- 팔로우 다시 걸기 처리 전담 sql -->
<update id="fadd"  parameterType="mVO">
UPDATE
	follow
SET
	f_isshow = 'Y'
WHERE
f_follower = (SELECT M_NO FROM MEMBER WHERE upper(M_ID) = upper(#{m_id}))
AND
f_following = (SELECT M_NO FROM MEMBER WHERE upper(M_ID) = upper(#{m_name}))
 
</update>




<!-- 팔로워 카운트 전담처리 함수 -->

<select id="followercnt" resultType="int" parameterType="String">
SELECT

	count(*)

FROM

follow

WHERE
	f_follower = ( SELECT
	
			m_no 
		FROM
			member
		WHERE
			upper(m_id)=upper(#{SID})) AND f_isshow ='Y'

</select>

<!-- 팔로잉 카운트 전담처리 함수 -->
<select id ="followeingcnt" resultType="int" parameterType="String">
SELECT
	
	count(*)
FROM
	follow

WHERE
	f_following = (SELECT 
		m_no
					FROM
			member
					WHERE
			upper(m_id) =upper(#{SID})) AND f_isshow ='Y'

</select>

	<!-- 내가 좋아요 한 게시글 보이기 -->
	
<select id ="likedboard" resultType="bVO" parameterType="String">
SELECT
b_no, (select a_sname from albumpicture where b_ano = a_no) sname , b_emotion,
(SELECT m_id FROM member WHERE m_no=b_mno) m_id

FROM
	board
WHERE
	b_isshow='Y' AND
	b_no IN 
(SELECT
	 bl_bno 

FROM
		boardlike
WHERE
 		bl_mno= 
        		(SELECT  
					m_no
				FROM
					member
				WHERE 
            		upper(m_id)= upper(#{SID}))
        AND bl_isshow='Y'
              )

</select>

</mapper>
